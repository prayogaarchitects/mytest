{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/image.jsx","components/gallery.jsx","components/contact.jsx","components/ImagesView.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","to","src","alt","type","data-toggle","data-target","Header","style","backgroundImage","data","title","paragraph","href","Features","left","cascade","servicescaption","servicesdescription","About","Why","map","d","i","Why2","Image","smallImage","largeImage","Gallery","useState","value","setValue","handleClick","a","onClick","filter","u","classification","projecttype","Contact","nameRef","useRef","emailRef","messageRef","validate","action","onSubmit","e","preventDefault","current","alert","method","name","placeholder","required","ref","rows","address","phone","email","width","height","allowfullscreen","loading","referrerpolicy","facebook","instagram","youtube","ImagesView","useParams","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","images","openImageViewer","useCallback","index","item","description","location","sitearea","margin","currentIndex","onClose","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","exact","path","element","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2798e16.chunk.js","sourcesContent":["\nimport { Route, Routes, Link } from \"react-router-dom\";\nexport const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container-fluid'>\n        <div className='navbar-header'>\n        <Link to='/'><img src={process.env.PUBLIC_URL + '/img/PAlogo.jpeg'}  className=\"iconv\" alt=\"Logo\" /></Link>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <Link className='navbar-brand mainheader page-scroll' to='/'>\n            Prayoga Architects\n          </Link>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            \n            <li>\n              <Link to='/about'>\n                About\n              </Link>\n            </li>\n            <li>\n              <Link to='/ourservices' >\n                Our Services\n              </Link>\n            </li>\n            <li>\n              <Link to='/gallery'>\n                Gallery\n              </Link>\n            </li>\n            \n            <li>\n              <Link to='/contact' >\n                Contact\n              </Link>\n            </li>\n            {/* <li class=\"nav-item dropdown\">\n              <Link class=\"nav-link dropdown-toggle\" to=\"/ourservices\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Services\n              </Link>\n              <div class=\"dropdown-menu\" id=\"dropmenu\" aria-labelledby=\"navbarDropdown\">\n                <Link class=\"dropdown-item\" to=\"/allprojects\">All Projects</Link>\n                <Link class=\"dropdown-item\" to=\"/interiors\">Interiors</Link>\n                <Link class=\"dropdown-item\" to=\"/archandint\">Architecture + Interiors</Link>\n                <Link class=\"dropdown-item\" to=\"/architecture\">Architecture</Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay' style={{ backgroundImage: `url(${process.env.PUBLIC_URL + '/img/bg.jpg'})` }}>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='ourservices'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","import Slide from 'react-reveal/Slide';\n\nexport const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n       <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='row section-title'>\n        <Slide left cascade><h2>Our Services</h2></Slide>\n        </div>\n        <div className=\"row d-flex\">\n          <div className=\"col-sm-12 col-md-12 col-lg-6 servicesp\">\n              <h3>{props.data ? props.data.servicescaption : \"\"}</h3>\n          </div>\n          <div className=\"col-sm-12 col-md-12 col-lg-6 servicesp\">\n              <span>{props.data ? props.data.servicesdescription : \"\"}</span>\n          </div>\n        </div> \n      </div>\n    </div>\n    </div>\n  )\n}\n\n","import Slide from 'react-reveal/Slide';\n\nexport const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n            <Slide left cascade><h2>About Us</h2></Slide>\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              <Slide left cascade><h3>Why Choose Us?</h3></Slide>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Link } from \"react-router-dom\"\nexport const Image = ({ title, id, largeImage, smallImage }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        {/* <a href={largeImage} title={title} data-lightbox-gallery='gallery1'> */}\n        <Link to={'/gallery/' + id}>\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </Link>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\nimport { useState, useEffect } from \"react\";\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\n\nexport const Gallery = (props) => {\n  const [value, setValue] = useState('ALL');\n\n  const handleClick = (a) => {\n    setValue(a)\n  }\n  \n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container-fluid'>\n        <div className='section-title'>\n        <Slide left cascade><h2>Gallery</h2></Slide>\n          <div id=\"sectionsdiv\">\n            <span onClick={() => handleClick('ALL')}>All Projects</span>\n            <span onClick={() => handleClick('INTERIOR')}>Interiors</span>\n            <span onClick={() => handleClick('INTANDARCH')}>Architecture + Interiors</span>\n            <span onClick={() => handleClick('ARCHITECTURE')}>Architecture</span>\n          </div>\n        </div>\n        \n        <div className='row'>\n        <Fade left cascade>\n          <div className='portfolio-items'>\n         \n            {props.data\n              ? props.data.filter(u => u.classification==value || value==\"ALL\").map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-12 col-md-6 col-lg-4 individualcards'>\n                 <Image title={d.title} id={d.id} largeImage={d.largeImage} smallImage={d.smallImage} />\n                  <span>{d.title + \" - \"+ d.projecttype}</span>\n                </div>\n              ))\n              : 'Loading...'}\n            \n          </div>\n        </Fade>\n        </div>\n       \n      </div>\n    </div>\n  )\n}\n","import { useState, useRef } from 'react'\n\nimport emailjs from 'emailjs-com'\nimport { Slide } from 'react-reveal'\n\nexport const Contact = (props) => {\n  const nameRef = useRef();\n  const emailRef = useRef();\n  const messageRef = useRef();\n  \n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    nameRef.current.value = ''\n    emailRef.current.value = ''\n    messageRef.current.value = ''\n    alert('Form Submitted scucesfully')\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n              <Slide left cascade><h2>Get In Touch</h2></Slide>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form validate action=\"https://formsubmit.co/prayogaarchitects@gmail.com\" onSubmit= {handleSubmit} method=\"POST\">\n              <div className='row'>\n                <div className='col-md-6'>\n                  <div className='form-group'>\n                    <input type=\"text\" \n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        ref = {nameRef}/>\n                      <p className='help-block text-danger'></p>\n                  </div>\n                </div>\n                <div className='col-md-6'>\n                  <div className='form-group'>\n                  <input type=\"email\" \n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        ref = {emailRef}/>\n                  <p className='help-block text-danger'></p>\n                  </div>\n                </div>\n              </div>\n              <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    ref={messageRef}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n              </div>\n              <div id='success'></div>\n              <button type=\"submit\" className='btn btn-custom btn-lg'>Send</button>\n              \n              \n              </form>\n            </div>\n          </div>\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n                {props.data ? props.data.email : 'loading'}\n              </p>\n            </div>\n            \n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n            <div >\n              <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d60906.01492922772!2d78.37529092614186!3d17.429730298518248!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bcb91df56fcf7b7%3A0x108ca3c1c6424729!2sPrayoga%20Architects!5e0!3m2!1sen!2sin!4v1666809962370!5m2!1sen!2sin\" width=\"90%\" height=\"50%\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n\n            </div>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.facebook : '/'}>\n                      <i className='fa fa-facebook'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.instagram : '/'}>\n                      <i className='fa fa-instagram'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.youtube : '/'}>\n                      <i className='fa fa-youtube'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2022 Prayoga Architects. Developed by Vasuprada. Design ideas Template Wire.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useParams } from \"react-router-dom\"\nimport {GrLocationPin} from \"react-icons/gr\"\nimport ImageViewer from \"react-simple-image-viewer\";\nimport { useState,useCallback } from \"react\";\n\nexport const ImagesView = (props) => {\n  let { id } = useParams();\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const images = [\n    \"http://placeimg.com/1200/800/nature\",\n    \"http://placeimg.com/800/1200/nature\",\n    \"http://placeimg.com/1920/1080/nature\",\n    \"http://placeimg.com/1500/500/nature\"\n  ];\n\n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n\n  return (\n    \n    <div id='imagesview' className='text-center'>\n      <div className='container-fluid'>          \n          {\n            props.data\n            ? props.data.filter(u => u.id==id).map(item => {\n              return <div className=\"row\" key={item.id}>\n                <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                  <h2 className=\"imagetitle\">{item.title}</h2>\n                </div>\n                <div className=\"col-sm-12 col-md-12 col-lg-6\">\n                 \n                  <p>{item.description}</p>\n                  \n                  <p><GrLocationPin/> {item.location}</p>\n                 \n                  <p>Site Area : {item.sitearea}</p>\n                  <p>Property Type : {item.projecttype}</p>\n                </div>\n              </div>\n            }) : \"\"\n          }\n\n      {images.map((src, index) => (\n        <img\n          src={src}\n          onClick={() => openImageViewer(index)}\n          width=\"300\"\n          key={index}\n          style={{ margin: \"2px\" }}\n          alt=\"\"\n        />\n      ))}\n      {isViewerOpen && (\n        <ImageViewer\n          src={images}\n          currentIndex={currentImage}\n          onClose={closeImageViewer}\n          disableScroll={false}\n          backgroundStyle={{\n            backgroundColor: \"rgba(0,0,0,0.9)\"\n          }}\n          closeOnClickOutside={true}\n        />\n      )}\n        \n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Gallery } from \"./components/gallery\";\nimport { Contact } from \"./components/contact\";\nimport { ImagesView } from \"./components/ImagesView\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.scss\";\nimport { Route, Routes } from \"react-router-dom\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Routes>\n        <Route exact path=\"/\" element={<Header data={landingPageData.Header}/>}></Route>\n        <Route path=\"about\" element={<About data={landingPageData.About} />}></Route>\n        <Route path=\"ourservices\" element={<Features data={landingPageData.Features}/>}></Route>\n        <Route path=\"gallery\" element={<Gallery data={landingPageData.Gallery}/>}></Route>\n        <Route path=\"contact\" element={<Contact data={landingPageData.Contact}/>}></Route>\n        <Route path=\"gallery/:id\" element={<ImagesView data={landingPageData.Gallery}/>} />\n      </Routes>\n    {/*         \n      <Header data={landingPageData.Header} />\n      <About data={landingPageData.About} />\n      <Features data={landingPageData.Features} />\n      <Gallery data={landingPageData.Gallery}/>\n      <Contact data={landingPageData.Contact} /> */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}